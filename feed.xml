<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TBOOX Open Source Project</title>
    <description>Focus on cross-platform development using c language</description>
    <link>http://www.tboox.org/</link>
    <atom:link href="http://www.tboox.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 17 May 2017 21:01:33 +0800</pubDate>
    <lastBuildDate>Wed, 17 May 2017 21:01:33 +0800</lastBuildDate>
    <generator>Jekyll v3.1.0</generator>
    
      <item>
        <title>xmake v2.1.4 released, support REPL</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake lua&lt;/code&gt; has supported REPL(read-eval-print), we can write and test script more easily now.&lt;/p&gt;

&lt;p&gt;Enter interactive mode:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake lua
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;1 + 2
3

&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;a
1

&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;_, v &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;pairs&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;1, 2, 3&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;end
1
2
3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And we can &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; modules:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;task &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; import&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;core.project.task&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;task.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
hello xmake!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you want to cancel multiline input, please input character &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;, for example:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;_, v &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;ipairs&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;1, 2&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;q             &amp;lt;--  cancel multiline and clear previous input
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;1 + 2
3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/&quot;&gt;Homepage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/#home&quot;&gt;Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;new-features&quot;&gt;New features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/68&quot;&gt;#68&lt;/a&gt;: Add &lt;code class=&quot;highlighter-rouge&quot;&gt;$(programdir)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;$(xmake)&lt;/code&gt; builtin variables&lt;/li&gt;
  &lt;li&gt;add &lt;code class=&quot;highlighter-rouge&quot;&gt;is_host&lt;/code&gt; api to get current host operating system&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/79&quot;&gt;#79&lt;/a&gt;: Improve &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake lua&lt;/code&gt; to run interactive commands, read-eval-print (REPL)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Modify option menu color.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/71&quot;&gt;#71&lt;/a&gt;: Improve to map optimization flags for cl.exe&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/73&quot;&gt;#73&lt;/a&gt;: Attempt to get executable path as xmake’s program directory&lt;/li&gt;
  &lt;li&gt;Improve the scope of &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;add_subdirs&lt;/code&gt; and use independent sub-scope to avoid dirty scope&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/78&quot;&gt;#78&lt;/a&gt;: Get terminal size in runtime and soft-wrap the help printing&lt;/li&gt;
  &lt;li&gt;Avoid generate &lt;code class=&quot;highlighter-rouge&quot;&gt;.xmake&lt;/code&gt; directory if be not in project&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs-fixed&quot;&gt;Bugs fixed&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/67&quot;&gt;#67&lt;/a&gt;: Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo make install&lt;/code&gt; permission problem&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/70&quot;&gt;#70&lt;/a&gt;: Fix check android compiler error&lt;/li&gt;
  &lt;li&gt;Fix temporary file path conflict&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;os.host&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;os.arch&lt;/code&gt; interfaces&lt;/li&gt;
  &lt;li&gt;Fix interpreter bug for loading root api&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/77&quot;&gt;#77&lt;/a&gt;: fix &lt;code class=&quot;highlighter-rouge&quot;&gt;cprint&lt;/code&gt; no color reset eol&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction-1&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;xmake is a make-like build utility based on lua.&lt;/p&gt;

&lt;p&gt;The project focuses on making development and building easier and provides many features (.e.g package, install, plugin, macro, action, option, task …), 
so that any developer can quickly pick it up and enjoy the productivity boost when developing and building project.&lt;/p&gt;

&lt;h2 id=&quot;simple-description&quot;&gt;Simple description&lt;/h2&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;build-project&quot;&gt;Build project&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;run-target&quot;&gt;Run target&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;debug-target&quot;&gt;Debug target&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run -d console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;support-features&quot;&gt;Support features&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tasks&lt;/li&gt;
  &lt;li&gt;Macros&lt;/li&gt;
  &lt;li&gt;Actions&lt;/li&gt;
  &lt;li&gt;Options&lt;/li&gt;
  &lt;li&gt;Plugins&lt;/li&gt;
  &lt;li&gt;Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-platforms&quot;&gt;Support platforms&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows (x86, x64, amd64, x86_amd64)&lt;/li&gt;
  &lt;li&gt;Macosx (i386, x86_64)&lt;/li&gt;
  &lt;li&gt;Linux (i386, x86_64, cross-toolchains …)&lt;/li&gt;
  &lt;li&gt;Android (armv5te, armv6, armv7-a, armv8-a, arm64-v8a)&lt;/li&gt;
  &lt;li&gt;iPhoneOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt;
  &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt;
  &lt;li&gt;Mingw (i386, x86_64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-languages&quot;&gt;Support Languages&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Objc/Objc++&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Assembly&lt;/li&gt;
  &lt;li&gt;Golang&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Dlang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;builtin-plugins&quot;&gt;Builtin Plugins&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Macros script plugin&lt;/li&gt;
  &lt;li&gt;Run the custom lua script plugin&lt;/li&gt;
  &lt;li&gt;Generate IDE project file plugin（makefile, vs2002 - vs2017 .. ）&lt;/li&gt;
  &lt;li&gt;Generate doxygen document plugin&lt;/li&gt;
  &lt;li&gt;Convert .app to .ipa plugin&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tboox/xmake&quot;&gt;&lt;img src=&quot;/static/img/xmake/build_demo.gif&quot; alt=&quot;build_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 10 May 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/05/10/update-v2.1.4/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/05/10/update-v2.1.4/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>version</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake v2.1.4版本更新，增加交互式命令执行(REPL)</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;概述&lt;/h3&gt;

&lt;p&gt;此次更新，主要增强&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake lua&lt;/code&gt;插件，支持交互式命令执行(read-eval-print, REPL)以及一些稳定性问题修复。&lt;/p&gt;

&lt;p&gt;有时候在交互模式下，运行命令更加的方便测试和验证一些模块和api，也更加的灵活，不需要再去额外写一个脚本文件来加载。&lt;/p&gt;

&lt;p&gt;我们先看下，如何进入交互模式：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 不带任何参数执行，就可以进入&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake lua
&amp;gt;

&lt;span class=&quot;c&quot;&gt;# 进行表达式计算&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;1 + 2
3

&lt;span class=&quot;c&quot;&gt;# 赋值和打印变量值&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;a
1

&lt;span class=&quot;c&quot;&gt;# 多行输入和执行&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;_, v &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;pairs&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;1, 2, 3&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;end
1
2
3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我们也能够通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 来导入扩展模块：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;task &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; import&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;core.project.task&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;task.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
hello xmake!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果要中途取消多行输入，只需要输入字符：&lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt; 就行了&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;_, v &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;ipairs&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;1, 2&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;print&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;q             &amp;lt;--  取消多行输入，清空先前的输入数据
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;1 + 2
3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;详细更新信息，可参考下面的更新细节：&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;新特性&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/68&quot;&gt;#68&lt;/a&gt;: 增加&lt;code class=&quot;highlighter-rouge&quot;&gt;$(programdir)&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;$(xmake)&lt;/code&gt;内建变量&lt;/li&gt;
  &lt;li&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;is_host&lt;/code&gt;接口去判断当前的主机环境&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/79&quot;&gt;#79&lt;/a&gt;: 增强&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake lua&lt;/code&gt;，支持交互式解释执行&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;改进&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;修改菜单选项颜色&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/71&quot;&gt;#71&lt;/a&gt;: 针对widows编译器改进优化选项映射&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/73&quot;&gt;#73&lt;/a&gt;: 尝试获取可执行文件路径来作为xmake的脚本目录&lt;/li&gt;
  &lt;li&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;add_subdirs&lt;/code&gt;中的子&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;中，使用独立子作用域，避免作用域污染导致的干扰问题&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/78&quot;&gt;#78&lt;/a&gt;: 美化非全屏终端窗口下的&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake --help&lt;/code&gt;输出&lt;/li&gt;
  &lt;li&gt;避免产生不必要的&lt;code class=&quot;highlighter-rouge&quot;&gt;.xmake&lt;/code&gt;目录，如果不在工程中的时候&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs&quot;&gt;Bugs修复&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/67&quot;&gt;#67&lt;/a&gt;: 修复 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo make install&lt;/code&gt; 命令权限问题&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/70&quot;&gt;#70&lt;/a&gt;: 修复检测android编译器错误&lt;/li&gt;
  &lt;li&gt;修复临时文件路径冲突问题&lt;/li&gt;
  &lt;li&gt;修复&lt;code class=&quot;highlighter-rouge&quot;&gt;os.host&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.arch&lt;/code&gt;等接口&lt;/li&gt;
  &lt;li&gt;修复根域api加载干扰其他子作用域问题&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/77&quot;&gt;#77&lt;/a&gt;: 修复&lt;code class=&quot;highlighter-rouge&quot;&gt;cprint&lt;/code&gt;色彩打印中断问题&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;XMake是一个基于Lua的轻量级跨平台自动构建工具，支持在各种主流平台上构建项目&lt;/p&gt;

&lt;p&gt;xmake的目标是开发者更加关注于项目本身开发，简化项目的描述和构建，并且提供平台无关性，使得一次编写，随处构建&lt;/p&gt;

&lt;p&gt;它跟cmake、automake、premake有点类似，但是机制不同，它默认不会去生成IDE相关的工程文件，采用直接编译，并且更加的方便易用
采用lua的工程描述语法更简洁直观，支持在大部分常用平台上进行构建，以及交叉编译&lt;/p&gt;

&lt;p&gt;并且xmake提供了创建、配置、编译、打包、安装、卸载、运行等一些actions，使得开发和构建更加的方便和流程化。&lt;/p&gt;

&lt;p&gt;不仅如此，它还提供了许多更加高级的特性，例如插件扩展、脚本宏记录、批量打包、自动文档生成等等。。&lt;/p&gt;

&lt;p&gt;如果你想要了解更多，请参考：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/&quot;&gt;在线文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake&quot;&gt;在线源码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/cn&quot;&gt;项目主页&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;简单的工程描述&lt;/h2&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-5&quot;&gt;构建工程&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-6&quot;&gt;运行目标&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-7&quot;&gt;调试程序&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run -d console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-8&quot;&gt;支持特性&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tasks&lt;/li&gt;
  &lt;li&gt;Macros&lt;/li&gt;
  &lt;li&gt;Actions&lt;/li&gt;
  &lt;li&gt;Options&lt;/li&gt;
  &lt;li&gt;Plugins&lt;/li&gt;
  &lt;li&gt;Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-9&quot;&gt;支持平台&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows (x86, x64, amd64, x86_amd64)&lt;/li&gt;
  &lt;li&gt;Macosx (i386, x86_64)&lt;/li&gt;
  &lt;li&gt;Linux (i386, x86_64, cross-toolchains …)&lt;/li&gt;
  &lt;li&gt;Android (armv5te, armv6, armv7-a, armv8-a, arm64-v8a)&lt;/li&gt;
  &lt;li&gt;iPhoneOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt;
  &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt;
  &lt;li&gt;Mingw (i386, x86_64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-10&quot;&gt;支持语言&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Objc/Objc++&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Assembly&lt;/li&gt;
  &lt;li&gt;Golang&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Dlang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-11&quot;&gt;内置插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;宏记录脚本和回放插件&lt;/li&gt;
  &lt;li&gt;加载自定义lua脚本插件&lt;/li&gt;
  &lt;li&gt;生成IDE工程文件插件（makefile, vs2002 - vs2017, …）&lt;/li&gt;
  &lt;li&gt;生成doxygen文档插件&lt;/li&gt;
  &lt;li&gt;iOS app2ipa插件&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-12&quot;&gt;构建演示&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tboox/xmake&quot;&gt;&lt;img src=&quot;/static/img/xmake/build_demo.gif&quot; alt=&quot;build_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 10 May 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/05/10/update-v2.1.4/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/05/10/update-v2.1.4/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>版本更新</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>使用xmake优雅地描述工程</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;描述语法&lt;/h3&gt;

&lt;p&gt;xmake的描述语法基于lua实现，因此描述语法继承了lua的灵活性和简洁性，并且通过28原则，将描述作用域（简单描述）、脚本作用域（复杂描述）进行分离，使得工程更加的简洁直观，可读性非常好。&lt;/p&gt;

&lt;p&gt;因为80%的工程，并不需要很复杂的脚本控制逻辑，只需要简单的几行配置描述，就可满足构建需求，基于这个假设，xmake分离作用域，使得80%的&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;文件，只需要这样描述：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;而仅有的20%的工程，才需要这样描述：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;shared&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_objectdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(buildir)/.objs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_targetdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;libs/armeabi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jni/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;on_package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ant debug&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;on_install&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;adb install -r ./bin/Demo-debug.apk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;on_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;adb shell am start -n com.demo/com.demo.DemoTest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;adb logcat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面的&lt;code class=&quot;highlighter-rouge&quot;&gt;function () end&lt;/code&gt;部分属于自定义脚本域，一般情况下是不需要设置的，只有在需要复杂的工程描述、高度定制化需求的情况下，才需要自定义他们，在这个作用域可以使用各种xmake提供的扩展模块，关于这个的更多介绍，见：&lt;a href=&quot;/cn/2016/10/26/api-scope/&quot;&gt;xmake 描述语法和作用域详解&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;而上面的代码，也是一个自定义混合构建jni和java代码的android工程，可以直接通过&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake run&lt;/code&gt;命令，实现一键自动构建、安装、运行apk程序。&lt;/p&gt;

&lt;p&gt;下面介绍一些比较常用的xmake描述实例：&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;构建一个可执行程序&lt;/h3&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这是一个最简单经典的实例，一般情况下，这种情况，你不需要自己写任何&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;文件，在当前代码目录下，直接执行&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake&lt;/code&gt;命令，就可以完成构建，并且会自动帮你生成一个&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;关于自动生成的详细信息，见：&lt;a href=&quot;/cn/2017/01/07/build-without-makefile/&quot;&gt;xmake智能代码扫描编译模式，无需手写任何make文件&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;构建一个可配置切换的库程序&lt;/h3&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(kind)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可通过配置，切换是否编译动态库还是静态库：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake f --kind&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;static; xmake
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake f --kind&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;shared; xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;debugrelease&quot;&gt;增加debug和release编译模式支持&lt;/h3&gt;

&lt;p&gt;也许默认的几行描述配置，已经不能满足你的需求，你需要可以通过切换编译模式，构建debug和release版本的程序，那么只需要：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_optimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;release&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_symbols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hidden&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_optimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fastest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;all&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;你只需要通过配置来切换构建模式：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake f -m debug; xmake
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake f -m release; xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[-m|--mode]&lt;/code&gt;属于内置选项，不需要自己定义&lt;code class=&quot;highlighter-rouge&quot;&gt;option&lt;/code&gt;，就可使用，并且模式的值是用户自己定义和维护的，你可以在&lt;code class=&quot;highlighter-rouge&quot;&gt;is_mode(&quot;xxx&quot;)&lt;/code&gt;判断各种模式状态。&lt;/p&gt;

&lt;h3 id=&quot;ios&quot;&gt;通过自定义脚本签名ios程序&lt;/h3&gt;

&lt;p&gt;ios的可执行程序，在设备上运行，需要在构建完成后进行签名，这个时候就可以使用自定义脚本来实现：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.m&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;after_build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ldid -S %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;targetfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这里只是用ldid程序做了个假签名，只能在越狱设备上用哦，仅仅作为例子参考哈。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;内置变量和外置变量&lt;/h3&gt;

&lt;p&gt;xmake提供了&lt;code class=&quot;highlighter-rouge&quot;&gt;$(varname)&lt;/code&gt;的语法，来支持内置变量的获取，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;add_cxflags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-I$(buildir)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;它将会在在实际编译的时候，将内置的&lt;code class=&quot;highlighter-rouge&quot;&gt;buildir&lt;/code&gt;变量转换为实际的构建输出目录：&lt;code class=&quot;highlighter-rouge&quot;&gt;-I./build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;一般内置变量可用于在传参时快速获取和拼接变量字符串，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(projectdir)/src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_includedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(buildir)/inc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;也可以在自定义脚本的模块接口中使用，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;on_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(scriptdir)/xxx.h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$(buildir)/inc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当然这种变量模式，也是可以扩展的，默认通过&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake f --var=val&lt;/code&gt;命令，配置的参数都是可以直接获取，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_defines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-DTEST=$(var)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;既然支持直接从配置选项中获取，那么当然也就能很方便的扩展自定义的选项，来获取自定义的变量了，具体如何自定义选项见：&lt;a href=&quot;http://xmake.io/#/zh/manual?id=option&quot;&gt;option&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;修改目标文件名&lt;/h3&gt;

&lt;p&gt;我们可以通过内建变量，将生成的目标文件按不同架构和平台进行分离，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo_$(arch)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_targetdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(buildir)/$(plat)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;之前的默认设置，目标文件会生成为&lt;code class=&quot;highlighter-rouge&quot;&gt;build\demo&lt;/code&gt;，而通过上述代码的设置，目标文件在不同配置构建下，路径和文件名也不尽相同，执行：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake f -p iphoneos -a arm64; xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;则目标文件为：&lt;code class=&quot;highlighter-rouge&quot;&gt;build/iphoneos/demo_arm64&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;添加子目录工程模块&lt;/h3&gt;

&lt;p&gt;如果你有多个target子模块，那么可以在一个&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;中进行定义，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/demo.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/test.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;但是，如果子模块非常多，那么放置在一个xmake文件，就显得有些臃肿了，可以放置到独立模块的子目录去：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/demo.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;add_subdirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;通过上述代码，关联一个子工程目录，在里面加上&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;的工程目标就行了。&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;安装头文件&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;target(&quot;tbox&quot;)
    set_kind(&quot;static&quot;)
    add_files(&quot;src/*.c&quot;)

    add_headers(&quot;../(tbox/**.h)|**/impl/**.h&quot;)
    set_headerdir(&quot;$(buildir)/inc&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安装好的头文件位置和目录结构为：&lt;code class=&quot;highlighter-rouge&quot;&gt;build/inc/tbox/*.h&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;其中&lt;code class=&quot;highlighter-rouge&quot;&gt;../(tbox/**.h)&lt;/code&gt;带括号的部分，为实际要安装的根路径，&lt;code class=&quot;highlighter-rouge&quot;&gt;|**/impl/**.h&lt;/code&gt;部分用于排除不需要安装的文件。&lt;/p&gt;

&lt;p&gt;其通配符匹配规则、排除规则可参考&lt;a href=&quot;http://xmake.io/#/zh/manual?id=targetadd_files&quot;&gt;add_files&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;多目标依赖构建&lt;/h3&gt;

&lt;p&gt;多个target工程目标，默认构建顺序是未定义的，一般按顺序的方式进行，如果你需要调整构建顺序，可以通过添加依赖顺序来实现：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;static&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;static&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_deps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面的例子，在编译目标demo的时候，需要先编译test1, test2目标，因为demo会去用到它们。&lt;/p&gt;

&lt;h3 id=&quot;section-8&quot;&gt;合并静态库&lt;/h3&gt;

&lt;p&gt;xmake的&lt;a href=&quot;http://xmake.io/#/zh/manual?id=targetadd_files&quot;&gt;add_files&lt;/a&gt;接口功能是非常强大的，不仅可以支持多种语言文件的混合添加构建，还可以直接添加静态库，进行自动合并库到当前的工程目标中去。&lt;/p&gt;

&lt;p&gt;我们可以这么写：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;static&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;libxxx.a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;lib*.a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;xxx.lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;直接在编译静态库的时候，合并多个已有的静态库，注意不是链接哦，这跟&lt;a href=&quot;http://xmake.io/#/zh/manual?id=targetadd_links&quot;&gt;add_links&lt;/a&gt;是有区别的。&lt;/p&gt;

&lt;p&gt;并且你也可以直接追加对象文件：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;objs/*.o&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-9&quot;&gt;添加自定义配置选项&lt;/h3&gt;

&lt;p&gt;我们可以自己定义一个配置选项，例如用于启用test：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_showmenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_defines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-DTEST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后关联到指定的target中去：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样，一个选项就算定义好了，如果这个选项被启用，那么编译这个target的时候，就会自动加上&lt;code class=&quot;highlighter-rouge&quot;&gt;-DTEST&lt;/code&gt;的宏定义。&lt;/p&gt;

&lt;p&gt;上面的设置，默认是禁用&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;选项的，接下来我们通过配置去启用这个选项：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake f --test&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;xmake的选项支持是非常强大的，除了上述基础用法外，还可以配置各种检测条件，实现自动检测，具体详情可参考：&lt;a href=&quot;http://xmake.io/#/zh/manual?id=optionadd_cincludes&quot;&gt;option&lt;/a&gt;和&lt;a href=&quot;/cn/2016/08/06/add-package-and-autocheck/&quot;&gt;依赖包的添加和自动检测机制&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-10&quot;&gt;添加第三方依赖包&lt;/h3&gt;

&lt;p&gt;在target作用域中，添加集成第三方包依赖，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_packages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;zlib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;polarssl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pcre&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mysql&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样，在编译test目标时，如果这个包存在的，将会自动追加包里面的宏定义、头文件搜索路径、链接库目录，也会自动链接包中所有库。&lt;/p&gt;

&lt;p&gt;用户不再需要自己单独调用&lt;code class=&quot;highlighter-rouge&quot;&gt;add_links&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;add_includedirs&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;add_ldflags&lt;/code&gt;等接口，来配置依赖库链接了。&lt;/p&gt;

&lt;p&gt;对于如何设置包搜索目录，可参考&lt;a href=&quot;http://xmake.io/#/zh/manual?id=targetadd_packagedirs&quot;&gt;add_packagedirs&lt;/a&gt;接口，依赖包详情请参考：&lt;a href=&quot;/cn/2016/08/06/add-package-and-autocheck/&quot;&gt;依赖包的添加和自动检测机制&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-11&quot;&gt;生成配置头文件&lt;/h3&gt;

&lt;p&gt;如果你想在xmake配置项目成功后，或者自动检测某个选项通过后，把检测的结果写入配置头文件，那么需要调用这个接口来启用自动生成&lt;code class=&quot;highlighter-rouge&quot;&gt;config.h&lt;/code&gt;文件。&lt;/p&gt;

&lt;p&gt;使用方式例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_config_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(buildir)/config.h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_config_h_prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TB_CONFIG&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当这个target中通过下面的这些接口，对这个target添加了相关的选项依赖、包依赖、接口依赖后，如果某依赖被启用，那么对应的一些宏定义配置，会自动写入被设置的&lt;code class=&quot;highlighter-rouge&quot;&gt;config.h&lt;/code&gt;文件中去。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/manual?id=targetadd_options&quot;&gt;add_options&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/manual?id=targetadd_packages&quot;&gt;add_packages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/manual?id=targetadd_cfuncs&quot;&gt;add_cfuncs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/manual?id=targetadd_cxxfuncs&quot;&gt;add_cxxfuncs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些接口，其实底层都用到了option选项中的一些检测设置，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wchar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 添加对wchar_t类型的检测&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_ctypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wchar_t&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 如果检测通过，自动生成TB_CONFIG_TYPE_HAVE_WCHAR的宏开关到config.h&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_defines_h_if_ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(prefix)_TYPE_HAVE_WCHAR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 启用头文件自动生成&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_config_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(buildir)/config.h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_config_h_prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TB_CONFIG&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 添加对wchar选项的依赖关联，只有加上这个关联，wchar选项的检测结果才会写入指定的config.h中去&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wchar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-12&quot;&gt;检测库头文件和接口&lt;/h3&gt;

&lt;p&gt;我们可以在刚刚生成的&lt;code class=&quot;highlighter-rouge&quot;&gt;config.h&lt;/code&gt;中增加一些库接口检测，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 设置和启用config.h&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_config_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(buildir)/config.h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_config_h_prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TEST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 仅通过参数一设置模块名前缀&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_cfunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;libc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sys/select.h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot;select&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 通过参数三，设置同时检测链接库：libpthread.a&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_cfunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pthread&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;    &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;s2&quot;&gt;&quot;pthread&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;pthread.h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;s2&quot;&gt;&quot;pthread_create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 通过参数二设置接口别名&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_cfunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;          &lt;span class=&quot;s2&quot;&gt;&quot;PTHREAD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;s2&quot;&gt;&quot;pthread.h&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;s2&quot;&gt;&quot;pthread_create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;生成的&lt;code class=&quot;highlighter-rouge&quot;&gt;config.h&lt;/code&gt;结果如下：&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef TEST_H
#define TEST_H
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 宏命名规则：$(prefix)前缀 _ 模块名（如果非nil）_ HAVE _ 接口名或者别名 （大写）
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#define TEST_LIBC_HAVE_SELECT 1
#define TEST_PTHREAD_HAVE_PTHREAD_CREATE 1
#define TEST_HAVE_PTHREAD 1
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样我们在代码里面就可以根据接口的支持力度来控制代码编译了。&lt;/p&gt;

&lt;h3 id=&quot;section-13&quot;&gt;自定义插件任务&lt;/h3&gt;

&lt;p&gt;task域用于描述一个自定义的任务实现，与&lt;a href=&quot;http://xmake.io/#/zh/manual?id=target&quot;&gt;target&lt;/a&gt;和&lt;a href=&quot;http://xmake.io/#/zh/manual?id=option&quot;&gt;option&lt;/a&gt;同级。&lt;/p&gt;

&lt;p&gt;例如，这里定义一个最简单的任务：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 设置运行脚本&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;on_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello xmake!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个任务只需要打印&lt;code class=&quot;highlighter-rouge&quot;&gt;hello xmake!&lt;/code&gt;，那如何来运行呢？&lt;/p&gt;

&lt;p&gt;由于这里没有使用&lt;a href=&quot;http://xmake.io/#/zh/manual?id=taskset_menu&quot;&gt;set_menu&lt;/a&gt;设置菜单，因此这个任务只能在&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;的自定义脚本或者其他任务内部调用，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;after_build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;-- 导入task模块&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;core.project.task&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;-- 运行hello任务&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此处在构建完test目标后运行hello任务，当然我们还可以传递参数哦:&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;on_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello xmake!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;after_build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;core.project.task&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;arg1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;arg2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;arg3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上述&lt;code class=&quot;highlighter-rouge&quot;&gt;task.run&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;这个是用于传递插件菜单中的参数，这里没有通过&lt;a href=&quot;http://xmake.io/#/zh/manual?id=taskset_menu&quot;&gt;set_menu&lt;/a&gt;设置菜单，此处传空。&lt;/p&gt;

&lt;p&gt;xmake的插件支持也是功能很强大的，并且提供了很多内置的使用插件，具体请参考：&lt;a href=&quot;http://xmake.io/#/zh/plugins?id=%E7%AE%80%E4%BB%8B&quot;&gt;xmake插件手册&lt;/a&gt;和&lt;a href=&quot;http://xmake.io/#/zh/manual?id=%E6%8F%92%E4%BB%B6%E4%BB%BB%E5%8A%A1&quot;&gt;task手册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;或者可以参考xmake自带的一些&lt;a href=&quot;https://github.com/tboox/xmake/blob/master/xmake/plugins/echo/xmake.lua&quot;&gt;插件demo&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-14&quot;&gt;另外一种语法风格&lt;/h3&gt;

&lt;p&gt;xmake除了支持最常使用的&lt;code class=&quot;highlighter-rouge&quot;&gt;set-add&lt;/code&gt;描述风格外，还支持另外一种语法风格：&lt;code class=&quot;highlighter-rouge&quot;&gt;key-val&lt;/code&gt;，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;defines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;DEBUG&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test/*.cpp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个等价于：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;static&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_defines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DEBUG&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test/*.cpp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;用户可以根据自己的喜好来选择合适的风格描述，但是这边的建议是：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* 针对简单的工程，不需要太过复杂的条件编译，可以使用key-val方式，更加精简，可读性好
* 针对复杂工程，需要更高的可控性，和灵活性的话，建议使用set-add方式
* 尽量不要两种风格混着写，虽然是支持的，但是这样对整个工程描述会感觉很乱，因此尽量统一风格作为自己的描述规范
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;另外，不仅对target，像option, task, template都是支持两种方式设置的，例如：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- set-add风格&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_showmenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;option&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Enable or disable the demo module&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;    =y|n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- key-val风格&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;option&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;showmenu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;option&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;desciption&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Enable or disable the demo module&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;    =y|n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;自定义的任务或者插件可以这么写：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- set-add风格&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;on_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello xmake!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_menu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;usage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;xmake hello [options]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello xmake!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- key-val风格&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello xmake!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;usage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;xmake hello [options]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello xmake!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-15&quot;&gt;结语&lt;/h3&gt;

&lt;p&gt;更多描述说明，可直接阅读&lt;a href=&quot;http://xmake.io/#/zh/manual&quot;&gt;xmake的官方手册&lt;/a&gt;，上面提供了完整的api文档和使用描述。&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/04/05/project-desciption-examples/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/04/05/project-desciption-examples/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>工程描述</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake v2.1.3 released, improve security and stability</title>
        <description>&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/&quot;&gt;Homepage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/#home&quot;&gt;Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This version provide safer &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake install&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake uninstall&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/xmake/safer_installation.png&quot; alt=&quot;safer_installation&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;new-features&quot;&gt;New features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/65&quot;&gt;#65&lt;/a&gt;: Add &lt;code class=&quot;highlighter-rouge&quot;&gt;set_default&lt;/code&gt; api for target to modify default build and install behavior&lt;/li&gt;
  &lt;li&gt;Allows to run &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake&lt;/code&gt; command in project subdirectories, it will find the project root directory automatically&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;add_rpathdirs&lt;/code&gt; for target and option&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/61&quot;&gt;#61&lt;/a&gt;: Provide safer &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake install&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake uninstall&lt;/code&gt; task with administrator permission&lt;/li&gt;
  &lt;li&gt;Provide &lt;code class=&quot;highlighter-rouge&quot;&gt;rpm&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;deb&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;osxpkg&lt;/code&gt; install package&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/63&quot;&gt;#63&lt;/a&gt;: More safer build and install xmake&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/61&quot;&gt;#61&lt;/a&gt;: Check run command as root&lt;/li&gt;
  &lt;li&gt;Improve check toolchains and implement delay checking&lt;/li&gt;
  &lt;li&gt;Add user tips when scanning and generating &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt; automatically&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bugs-fixed&quot;&gt;Bugs fixed&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Fix error tips for checking xmake min version&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/60&quot;&gt;#60&lt;/a&gt;: Fix self-build for macosx and windows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/64&quot;&gt;#64&lt;/a&gt;: Fix compile android &lt;code class=&quot;highlighter-rouge&quot;&gt;armv8-a&lt;/code&gt; error&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/50&quot;&gt;#50&lt;/a&gt;: Fix only position independent executables issue for android program&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;xmake is a make-like build utility based on lua.&lt;/p&gt;

&lt;p&gt;The project focuses on making development and building easier and provides many features (.e.g package, install, plugin, macro, action, option, task …), 
so that any developer can quickly pick it up and enjoy the productivity boost when developing and building project.&lt;/p&gt;

&lt;h2 id=&quot;simple-description&quot;&gt;Simple description&lt;/h2&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;build-project&quot;&gt;Build project&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;run-target&quot;&gt;Run target&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;debug-target&quot;&gt;Debug target&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run -d console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;support-features&quot;&gt;Support features&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tasks&lt;/li&gt;
  &lt;li&gt;Macros&lt;/li&gt;
  &lt;li&gt;Actions&lt;/li&gt;
  &lt;li&gt;Options&lt;/li&gt;
  &lt;li&gt;Plugins&lt;/li&gt;
  &lt;li&gt;Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-platforms&quot;&gt;Support platforms&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows (x86, x64, amd64, x86_amd64)&lt;/li&gt;
  &lt;li&gt;Macosx (i386, x86_64)&lt;/li&gt;
  &lt;li&gt;Linux (i386, x86_64, cross-toolchains …)&lt;/li&gt;
  &lt;li&gt;Android (armv5te, armv6, armv7-a, armv8-a, arm64-v8a)&lt;/li&gt;
  &lt;li&gt;iPhoneOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt;
  &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt;
  &lt;li&gt;Mingw (i386, x86_64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-languages&quot;&gt;Support Languages&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Objc/Objc++&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Assembly&lt;/li&gt;
  &lt;li&gt;Golang&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Dlang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;builtin-plugins&quot;&gt;Builtin Plugins&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Macros script plugin&lt;/li&gt;
  &lt;li&gt;Run the custom lua script plugin&lt;/li&gt;
  &lt;li&gt;Generate IDE project file plugin（makefile, vs2002 - vs2017 .. ）&lt;/li&gt;
  &lt;li&gt;Generate doxygen document plugin&lt;/li&gt;
  &lt;li&gt;Convert .app to .ipa plugin&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tboox/xmake&quot;&gt;&lt;img src=&quot;/static/img/xmake/build_demo.gif&quot; alt=&quot;build_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 02 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/04/02/update-v2.1.3/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/04/02/update-v2.1.3/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>version</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake v2.1.3版本更新，修复安全和稳定性问题</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;概述&lt;/h3&gt;

&lt;p&gt;此次更新，主要修复xmake的一些稳定性问题，并且对安装和卸载提供更加安全的权限处理，相关更新细节见：&lt;a href=&quot;/cn/2017/03/30/safer-install-and-uninstall/&quot;&gt;改进权限问题，提升操作安全性&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/xmake/safer_installation.png&quot; alt=&quot;safer_installation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;并且此版本还对用户使用上的体验进行了一些优化，例如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;减少冗余检测和提示信息，提升检测效率&lt;/li&gt;
  &lt;li&gt;在非xmake工程自动生成&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;时提供更加友好的提示，避免误操作&lt;/li&gt;
  &lt;li&gt;在任意工程子目录也可正常执行xmake操作，类似git&lt;/li&gt;
  &lt;li&gt;提供更加安全友好的安装和卸载提示信息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细更新信息，可参考下面的更新细节：&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;新特性&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/65&quot;&gt;#65&lt;/a&gt;: 为target添加&lt;code class=&quot;highlighter-rouge&quot;&gt;set_default&lt;/code&gt;接口用于修改默认的构建所有targets行为&lt;/li&gt;
  &lt;li&gt;允许在工程子目录执行&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake&lt;/code&gt;命令进行构建，xmake会自动检测所在的工程根目录&lt;/li&gt;
  &lt;li&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;add_rpathdirs&lt;/code&gt; api到target和option，支持动态库的自动加载运行&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;改进&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/61&quot;&gt;#61&lt;/a&gt;: 提供更加安全的&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake install&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake uninstall&lt;/code&gt;任务，更友好的处理root安装问题&lt;/li&gt;
  &lt;li&gt;提供&lt;code class=&quot;highlighter-rouge&quot;&gt;rpm&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;deb&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;osxpkg&lt;/code&gt;安装包&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/63&quot;&gt;#63&lt;/a&gt;: 改进安装脚本，实现更加安全的构建和安装xmake&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/pull/61&quot;&gt;#61&lt;/a&gt;: 禁止在root权限下运行xmake命令，增强安全性&lt;/li&gt;
  &lt;li&gt;改进工具链检测，通过延迟延迟检测提升整体检测效率&lt;/li&gt;
  &lt;li&gt;当自动扫面生成&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;时，添加更友好的用户提示，避免用户无操作&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs&quot;&gt;Bugs修复&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;修复版本检测的错误提示信息&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/60&quot;&gt;#60&lt;/a&gt;: 修复macosx和windows平台的xmake自举编译&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/64&quot;&gt;#64&lt;/a&gt;: 修复构建android &lt;code class=&quot;highlighter-rouge&quot;&gt;armv8-a&lt;/code&gt;架构失败问题&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/50&quot;&gt;#50&lt;/a&gt;: 修复构建android可执行程序，无法运行问题&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;XMake是一个基于Lua的轻量级跨平台自动构建工具，支持在各种主流平台上构建项目&lt;/p&gt;

&lt;p&gt;xmake的目标是开发者更加关注于项目本身开发，简化项目的描述和构建，并且提供平台无关性，使得一次编写，随处构建&lt;/p&gt;

&lt;p&gt;它跟cmake、automake、premake有点类似，但是机制不同，它默认不会去生成IDE相关的工程文件，采用直接编译，并且更加的方便易用
采用lua的工程描述语法更简洁直观，支持在大部分常用平台上进行构建，以及交叉编译&lt;/p&gt;

&lt;p&gt;并且xmake提供了创建、配置、编译、打包、安装、卸载、运行等一些actions，使得开发和构建更加的方便和流程化。&lt;/p&gt;

&lt;p&gt;不仅如此，它还提供了许多更加高级的特性，例如插件扩展、脚本宏记录、批量打包、自动文档生成等等。。&lt;/p&gt;

&lt;p&gt;如果你想要了解更多，请参考：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/&quot;&gt;在线文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake&quot;&gt;在线源码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/cn&quot;&gt;项目主页&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;简单的工程描述&lt;/h2&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-5&quot;&gt;构建工程&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-6&quot;&gt;运行目标&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-7&quot;&gt;调试程序&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run -d console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-8&quot;&gt;支持特性&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tasks&lt;/li&gt;
  &lt;li&gt;Macros&lt;/li&gt;
  &lt;li&gt;Actions&lt;/li&gt;
  &lt;li&gt;Options&lt;/li&gt;
  &lt;li&gt;Plugins&lt;/li&gt;
  &lt;li&gt;Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-9&quot;&gt;支持平台&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows (x86, x64, amd64, x86_amd64)&lt;/li&gt;
  &lt;li&gt;Macosx (i386, x86_64)&lt;/li&gt;
  &lt;li&gt;Linux (i386, x86_64, cross-toolchains …)&lt;/li&gt;
  &lt;li&gt;Android (armv5te, armv6, armv7-a, armv8-a, arm64-v8a)&lt;/li&gt;
  &lt;li&gt;iPhoneOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt;
  &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt;
  &lt;li&gt;Mingw (i386, x86_64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-10&quot;&gt;支持语言&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Objc/Objc++&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Assembly&lt;/li&gt;
  &lt;li&gt;Golang&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Dlang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-11&quot;&gt;内置插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;宏记录脚本和回放插件&lt;/li&gt;
  &lt;li&gt;加载自定义lua脚本插件&lt;/li&gt;
  &lt;li&gt;生成IDE工程文件插件（makefile, vs2002 - vs2017, …）&lt;/li&gt;
  &lt;li&gt;生成doxygen文档插件&lt;/li&gt;
  &lt;li&gt;iOS app2ipa插件&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-12&quot;&gt;构建演示&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tboox/xmake&quot;&gt;&lt;img src=&quot;/static/img/xmake/build_demo.gif&quot; alt=&quot;build_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 02 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/04/02/update-v2.1.3/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/04/02/update-v2.1.3/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>版本更新</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake改进权限问题，提升操作安全性</title>
        <description>&lt;p&gt;最近对xmake的操作权限进行了升级，提供更加安全的命令操作，例如：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;改进&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake install&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake uninstall&lt;/code&gt;命令，提供更加安全地安装和卸载支持&lt;/li&gt;
  &lt;li&gt;参考homebrew，禁止在root下运行xmake命令&lt;/li&gt;
  &lt;li&gt;改进xmake自身的编译安装脚本，不在root下进行build&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;section&quot;&gt;安全问题1&lt;/h5&gt;

&lt;p&gt;之前的&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake install&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake uninstall&lt;/code&gt;行为，是自动&lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;后进行安装，而大部分情况下安装目录是在&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local&lt;/code&gt;目录下。&lt;/p&gt;

&lt;p&gt;因此，需要root权限才能写入，那么之前的方式只能暴力地直接加上&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo xmake install&lt;/code&gt;来执行。&lt;/p&gt;

&lt;p&gt;可想而知，虽然安装确实成功了，但是由于默认的自动构建行为，导致生成的临时&lt;code class=&quot;highlighter-rouge&quot;&gt;*.o&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;*.a&lt;/code&gt;等各种文件都具备了root权限，而且一个不小心就会覆盖系统的一些库文件。&lt;/p&gt;

&lt;p&gt;因此，为了避免这个问题，xmake改进了安装逻辑，将&lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;install&lt;/code&gt;分离成两个独立的阶段，分别使用不同的权限，并且提供更加友好的提示信息，例如：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/xmake/safer_installation.png&quot; alt=&quot;safer_installation&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-1&quot;&gt;安全问题2&lt;/h5&gt;

&lt;p&gt;这个主要参考了homebrew对&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo brew&lt;/code&gt;的处理，为了提高安全性，它禁止在root下运行命令，其实很多其他工具都有这个特性，&lt;code class=&quot;highlighter-rouge&quot;&gt;CocoaPods&lt;/code&gt;也是如此。&lt;/p&gt;

&lt;p&gt;那它是怎么实现的呢，我翻了下homebrew的源码，在&lt;code class=&quot;highlighter-rouge&quot;&gt;brew.sh&lt;/code&gt;中有这么一段脚本：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$(id -u)&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Homebrew Services may need `sudo` for system-wide daemons.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$HOMEBREW_COMMAND&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;services&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# It&#39;s fine to run this as root as it&#39;s not changing anything.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$HOMEBREW_COMMAND&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--prefix&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;odie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOS&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
Running Homebrew as root is extremely dangerous and no longer supported.
As Homebrew does not drop privileges on installation you would be giving all
build scripts full access to your system.
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;原来是用了&lt;code class=&quot;highlighter-rouge&quot;&gt;id -u&lt;/code&gt;命令，来判断当前命令是否在root下运行，如果是root用户，那么这个命令返回：’0’&lt;/p&gt;

&lt;p&gt;因此，xmake参考这个实现，也实现了个类似的检测和提示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/xmake/check_root.png&quot; alt=&quot;check_root&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-2&quot;&gt;安全问题3&lt;/h5&gt;

&lt;p&gt;之前的xmake源码安装，是直接运行的&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ./install&lt;/code&gt;，这个跟问题一类似，build和install同时在root执行，因此只需要把他们分离开来就行了，现在的安装步骤：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make build; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果要指定安装目录，那么只需要：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make build; sudo make install &lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 30 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/03/30/safer-install-and-uninstall/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/03/30/safer-install-and-uninstall/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>root权限</category>
        
        <category>安装</category>
        
        <category>卸载</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake v2.1.2 released, Improve vs201x project generator</title>
        <description>&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/&quot;&gt;Homepage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/#home&quot;&gt;Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;new-features&quot;&gt;New features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Add aur package script and support to install xmake from yaourt&lt;/li&gt;
  &lt;li&gt;Add &lt;a href=&quot;#http://xmake.io/#/manual?id=targetset_basename&quot;&gt;set_basename&lt;/a&gt; api for target&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Support vs2017&lt;/li&gt;
  &lt;li&gt;Support compile rust for android&lt;/li&gt;
  &lt;li&gt;Improve vs201x project plugin and support multi-modes compilation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs-fixed&quot;&gt;Bugs fixed&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Fix cannot find android sdk header files&lt;/li&gt;
  &lt;li&gt;Fix checking option bug&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/57&quot;&gt;#57&lt;/a&gt;: Fix code files mode to 0644&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tboox/xmake&quot;&gt;&lt;img src=&quot;/static/img/xmake/build_demo.gif&quot; alt=&quot;build_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;xmake is a make-like build utility based on lua.&lt;/p&gt;

&lt;p&gt;The project focuses on making development and building easier and provides many features (.e.g package, install, plugin, macro, action, option, task …), 
so that any developer can quickly pick it up and enjoy the productivity boost when developing and building project.&lt;/p&gt;

&lt;h2 id=&quot;simple-description&quot;&gt;Simple description&lt;/h2&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;build-project&quot;&gt;Build project&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;run-target&quot;&gt;Run target&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;debug-target&quot;&gt;Debug target&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run -d console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;support-features&quot;&gt;Support features&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tasks&lt;/li&gt;
  &lt;li&gt;Macros&lt;/li&gt;
  &lt;li&gt;Actions&lt;/li&gt;
  &lt;li&gt;Options&lt;/li&gt;
  &lt;li&gt;Plugins&lt;/li&gt;
  &lt;li&gt;Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-platforms&quot;&gt;Support platforms&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows (x86, x64, amd64, x86_amd64)&lt;/li&gt;
  &lt;li&gt;Macosx (i386, x86_64)&lt;/li&gt;
  &lt;li&gt;Linux (i386, x86_64, cross-toolchains …)&lt;/li&gt;
  &lt;li&gt;Android (armv5te, armv6, armv7-a, armv8-a, arm64-v8a)&lt;/li&gt;
  &lt;li&gt;iPhoneOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt;
  &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt;
  &lt;li&gt;Mingw (i386, x86_64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-languages&quot;&gt;Support Languages&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Objc/Objc++&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Assembly&lt;/li&gt;
  &lt;li&gt;Golang&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Dlang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;builtin-plugins&quot;&gt;Builtin Plugins&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Macros script plugin&lt;/li&gt;
  &lt;li&gt;Run the custom lua script plugin&lt;/li&gt;
  &lt;li&gt;Generate IDE project file plugin（makefile, vs2002 - vs2017 .. ）&lt;/li&gt;
  &lt;li&gt;Generate doxygen document plugin&lt;/li&gt;
  &lt;li&gt;Convert .app to .ipa plugin&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 23 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/03/23/update-v2.1.2/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/03/23/update-v2.1.2/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>version</category>
        
        <category>golang</category>
        
        <category>rust</category>
        
        <category>dlang</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake v2.1.2版本更新，增强vs工程支持</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;概述&lt;/h2&gt;

&lt;p&gt;此版本主要增强了vs201x工程的生成，以及支持vs2017编译环境，并且针对archlinux提供更加方便的aur安装。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/cn/&quot;&gt;项目主页&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/#zh/&quot;&gt;查看文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细更新内容如下：&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;新特性&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;添加aur打包脚本，并支持用&lt;code class=&quot;highlighter-rouge&quot;&gt;yaourt&lt;/code&gt;包管理器进行安装。&lt;/li&gt;
  &lt;li&gt;添加&lt;a href=&quot;#http://xmake.io/#/zh/manual?id=targetset_basename&quot;&gt;set_basename&lt;/a&gt;接口，便于定制化修改生成后的目标文件名&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;改进&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;支持vs2017编译环境&lt;/li&gt;
  &lt;li&gt;支持编译android版本的rust程序&lt;/li&gt;
  &lt;li&gt;增强vs201x工程生成插件，支持同时多模式、架构编译&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs&quot;&gt;Bugs修复&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;修复编译android程序，找不到系统头文件问题&lt;/li&gt;
  &lt;li&gt;修复检测选项行为不正确问题&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/57&quot;&gt;#57&lt;/a&gt;: 修复代码文件权限到0644&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-3&quot;&gt;构建演示&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tboox/xmake&quot;&gt;&lt;img src=&quot;/static/img/xmake/build_demo.gif&quot; alt=&quot;build_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;XMake是一个基于Lua的轻量级跨平台自动构建工具，支持在各种主流平台上构建项目&lt;/p&gt;

&lt;p&gt;xmake的目标是开发者更加关注于项目本身开发，简化项目的描述和构建，并且提供平台无关性，使得一次编写，随处构建&lt;/p&gt;

&lt;p&gt;它跟cmake、automake、premake有点类似，但是机制不同，它默认不会去生成IDE相关的工程文件，采用直接编译，并且更加的方便易用
采用lua的工程描述语法更简洁直观，支持在大部分常用平台上进行构建，以及交叉编译&lt;/p&gt;

&lt;p&gt;并且xmake提供了创建、配置、编译、打包、安装、卸载、运行等一些actions，使得开发和构建更加的方便和流程化。&lt;/p&gt;

&lt;p&gt;不仅如此，它还提供了许多更加高级的特性，例如插件扩展、脚本宏记录、批量打包、自动文档生成等等。。&lt;/p&gt;

&lt;p&gt;如果你想要了解更多，请参考：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/&quot;&gt;在线文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake&quot;&gt;在线源码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/cn&quot;&gt;项目主页&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-5&quot;&gt;简单的工程描述&lt;/h2&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-6&quot;&gt;构建工程&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-7&quot;&gt;运行目标&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-8&quot;&gt;调试程序&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run -d console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-9&quot;&gt;支持特性&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tasks&lt;/li&gt;
  &lt;li&gt;Macros&lt;/li&gt;
  &lt;li&gt;Actions&lt;/li&gt;
  &lt;li&gt;Options&lt;/li&gt;
  &lt;li&gt;Plugins&lt;/li&gt;
  &lt;li&gt;Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-10&quot;&gt;支持平台&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows (x86, x64, amd64, x86_amd64)&lt;/li&gt;
  &lt;li&gt;Macosx (i386, x86_64)&lt;/li&gt;
  &lt;li&gt;Linux (i386, x86_64, cross-toolchains …)&lt;/li&gt;
  &lt;li&gt;Android (armv5te, armv6, armv7-a, armv8-a, arm64-v8a)&lt;/li&gt;
  &lt;li&gt;iPhoneOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt;
  &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt;
  &lt;li&gt;Mingw (i386, x86_64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-11&quot;&gt;支持语言&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Objc/Objc++&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Assembly&lt;/li&gt;
  &lt;li&gt;Golang&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Dlang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-12&quot;&gt;内置插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;宏记录脚本和回放插件&lt;/li&gt;
  &lt;li&gt;加载自定义lua脚本插件&lt;/li&gt;
  &lt;li&gt;生成IDE工程文件插件（makefile, vs2002 - vs2017, …）&lt;/li&gt;
  &lt;li&gt;生成doxygen文档插件&lt;/li&gt;
  &lt;li&gt;iOS app2ipa插件&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 23 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/03/23/update-v2.1.2/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/03/23/update-v2.1.2/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>版本</category>
        
        <category>vs201x</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake v2.1.1 released, support golang, dlang and rust languages</title>
        <description>&lt;h3 id=&quot;new-features&quot;&gt;New features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;--links&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;--linkdirs&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--includedirs&lt;/code&gt; configure arguments&lt;/li&gt;
  &lt;li&gt;Add app2ipa plugin&lt;/li&gt;
  &lt;li&gt;Add dictionary syntax style for &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Provide smart scanning and building mode without &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;set_xmakever&lt;/code&gt; api for &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;add_frameworks&lt;/code&gt; api for &lt;code class=&quot;highlighter-rouge&quot;&gt;objc&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;swift&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Support multi-languages extension and add &lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt; language&lt;/li&gt;
  &lt;li&gt;Add optional &lt;code class=&quot;highlighter-rouge&quot;&gt;target_end&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;option_end&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;task_end&lt;/code&gt; apis for scope&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt; project templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Support vs2017 for the project plugin&lt;/li&gt;
  &lt;li&gt;Improve gcc error and warning tips&lt;/li&gt;
  &lt;li&gt;Improve lanuage module&lt;/li&gt;
  &lt;li&gt;Improve print interface, support lua print and format output&lt;/li&gt;
  &lt;li&gt;Automatically scan project files and generate it for building if xmake.lua not exists&lt;/li&gt;
  &lt;li&gt;Modify license to Apache License 2.0&lt;/li&gt;
  &lt;li&gt;Remove some binary tools&lt;/li&gt;
  &lt;li&gt;Remove install.bat script and provide nsis install package&lt;/li&gt;
  &lt;li&gt;Rewrite &lt;a href=&quot;http://www.xmake.io/#/home/&quot;&gt;documents&lt;/a&gt; using &lt;a href=&quot;https://github.com/egoist/docute&quot;&gt;docute&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Improve &lt;code class=&quot;highlighter-rouge&quot;&gt;os.run&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.exec&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.cp&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.mv&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;os.rm&lt;/code&gt; interfaces and support wildcard pattern&lt;/li&gt;
  &lt;li&gt;Optimize the output info and add &lt;code class=&quot;highlighter-rouge&quot;&gt;-q|--quiet&lt;/code&gt; option&lt;/li&gt;
  &lt;li&gt;Improve makefile generator, uses $(XX) variables for tools and flags&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs-fixed&quot;&gt;Bugs fixed&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake/issues/41&quot;&gt;#41&lt;/a&gt;: Fix checker bug for windows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake/issues/43&quot;&gt;#43&lt;/a&gt;: Avoid to generate unnecessary .xmake directory&lt;/li&gt;
  &lt;li&gt;Add c++ stl search directories for android&lt;/li&gt;
  &lt;li&gt;Fix compile error for rhel 5.10&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;os.iorun&lt;/code&gt; bug&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/03/04/update-v2.1.1/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/03/04/update-v2.1.1/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>version</category>
        
        <category>golang</category>
        
        <category>rust</category>
        
        <category>dlang</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake 大版本发布：v2.1.1，新增golang, rust, dlang构建支持</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;概述&lt;/h2&gt;

&lt;p&gt;此版本重构了整个xmake，使得xmake更加方便地进行多语言扩展，并且在之前原有的构建语言支持上，新增了对&lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt; 程序构建支持。&lt;/p&gt;

&lt;p&gt;并且重写了所有文档，提供更加详细完整的接口手册和文档支持：&lt;a href=&quot;http://www.xmake.io/#zh/&quot;&gt;新版文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;License也从之前的LGPLv2.1改为Apache License 2.0，更加详细的改进请看下面详细描述：&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;新特性&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;--links&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;--linkdirs&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--includedirs&lt;/code&gt; 配置参数&lt;/li&gt;
  &lt;li&gt;添加app2ipa插件&lt;/li&gt;
  &lt;li&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;工程描述增加dictionay语法风格&lt;/li&gt;
  &lt;li&gt;提供智能扫描编译模式，在无任何&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;等工程描述文件的情况下，也能直接快速编译&lt;/li&gt;
  &lt;li&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;工程描述添加&lt;code class=&quot;highlighter-rouge&quot;&gt;set_xmakever&lt;/code&gt;接口，更加友好的处理版本兼容性问题&lt;/li&gt;
  &lt;li&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;objc&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;swift&lt;/code&gt;程序添加&lt;code class=&quot;highlighter-rouge&quot;&gt;add_frameworks&lt;/code&gt;接口&lt;/li&gt;
  &lt;li&gt;更加快速方便的多语言扩展支持，增加&lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt;程序构建的支持&lt;/li&gt;
  &lt;li&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;target_end&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;option_end&lt;/code&gt; 和&lt;code class=&quot;highlighter-rouge&quot;&gt;task_end&lt;/code&gt;等可选api，用于显示结束描述域，进入根域设置，提高可读性&lt;/li&gt;
  &lt;li&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt;工程模板&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;改进&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;工程生成插件支持vs2017&lt;/li&gt;
  &lt;li&gt;改进gcc/clang编译器警告和错误提示&lt;/li&gt;
  &lt;li&gt;重构代码架构，改进多语言支持，更加方便灵活的扩展语言支持&lt;/li&gt;
  &lt;li&gt;改进print接口，同时支持原生lua print以及格式化打印&lt;/li&gt;
  &lt;li&gt;如果xmake.lua不存在，自动扫描工程代码文件，并且生成xmake.lua进行编译&lt;/li&gt;
  &lt;li&gt;修改license，使用更加宽松的Apache License 2.0&lt;/li&gt;
  &lt;li&gt;移除一些二进制工具文件&lt;/li&gt;
  &lt;li&gt;移除install.bat脚本，提供windows nsis安装包支持&lt;/li&gt;
  &lt;li&gt;使用&lt;a href=&quot;https://github.com/egoist/docute&quot;&gt;docute&lt;/a&gt;重写&lt;a href=&quot;http://www.xmake.io/#/zh/&quot;&gt;文档&lt;/a&gt;，提供更加完善的文档支持&lt;/li&gt;
  &lt;li&gt;增强&lt;code class=&quot;highlighter-rouge&quot;&gt;os.run&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.exec&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.cp&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.mv&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;os.rm&lt;/code&gt; 等接口，支持通配符模式匹配和批量文件操作&lt;/li&gt;
  &lt;li&gt;精简和优化构建输出信息，添加&lt;code class=&quot;highlighter-rouge&quot;&gt;-q|--quiet&lt;/code&gt;选项实现静默构建&lt;/li&gt;
  &lt;li&gt;改进&lt;code class=&quot;highlighter-rouge&quot;&gt;makefile&lt;/code&gt;生成插件，抽取编译工具和编译选项到全局变量&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs&quot;&gt;Bugs修复&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake/issues/41&quot;&gt;#41&lt;/a&gt;: 修复在windows下自动检测x64失败问题&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake/issues/43&quot;&gt;#43&lt;/a&gt;: 避免创建不必要的.xmake工程缓存目录&lt;/li&gt;
  &lt;li&gt;针对android版本添加c++ stl搜索目录，解决编译c++失败问题&lt;/li&gt;
  &lt;li&gt;修复在rhel 5.10上编译失败问题&lt;/li&gt;
  &lt;li&gt;修复&lt;code class=&quot;highlighter-rouge&quot;&gt;os.iorun&lt;/code&gt;返回数据不对问题&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/03/04/update-v2.1.1/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/03/04/update-v2.1.1/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>版本</category>
        
        <category>golang</category>
        
        <category>rust</category>
        
        <category>dlang</category>
        
        
        <category>xmake</category>
        
      </item>
    
  </channel>
</rss>
