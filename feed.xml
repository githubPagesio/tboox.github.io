<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TBOOX Open Source Project</title>
    <description>Focus on cross-platform development using c language</description>
    <link>http://www.tboox.org/</link>
    <atom:link href="http://www.tboox.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 24 Mar 2017 11:00:13 +0800</pubDate>
    <lastBuildDate>Fri, 24 Mar 2017 11:00:13 +0800</lastBuildDate>
    <generator>Jekyll v3.1.0</generator>
    
      <item>
        <title>xmake v2.1.2 released, Improve vs201x project generator</title>
        <description>&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/&quot;&gt;Homepage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/#home&quot;&gt;Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;new-features&quot;&gt;New features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Add aur package script and support to install xmake from yaourt&lt;/li&gt;
  &lt;li&gt;Add &lt;a href=&quot;#http://xmake.io/#/manual?id=targetset_basename&quot;&gt;set_basename&lt;/a&gt; api for target&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Support vs2017&lt;/li&gt;
  &lt;li&gt;Support compile rust for android&lt;/li&gt;
  &lt;li&gt;Improve vs201x project plugin and support multi-modes compilation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs-fixed&quot;&gt;Bugs fixed&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Fix cannot find android sdk header files&lt;/li&gt;
  &lt;li&gt;Fix checking option bug&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/57&quot;&gt;#57&lt;/a&gt;: Fix code files mode to 0644&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tboox/xmake&quot;&gt;&lt;img src=&quot;/static/img/xmake/build_demo.gif&quot; alt=&quot;build_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;xmake is a make-like build utility based on lua.&lt;/p&gt;

&lt;p&gt;The project focuses on making development and building easier and provides many features (.e.g package, install, plugin, macro, action, option, task …), 
so that any developer can quickly pick it up and enjoy the productivity boost when developing and building project.&lt;/p&gt;

&lt;h2 id=&quot;simple-description&quot;&gt;Simple description&lt;/h2&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;build-project&quot;&gt;Build project&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;run-target&quot;&gt;Run target&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;debug-target&quot;&gt;Debug target&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run -d console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;support-features&quot;&gt;Support features&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tasks&lt;/li&gt;
  &lt;li&gt;Macros&lt;/li&gt;
  &lt;li&gt;Actions&lt;/li&gt;
  &lt;li&gt;Options&lt;/li&gt;
  &lt;li&gt;Plugins&lt;/li&gt;
  &lt;li&gt;Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-platforms&quot;&gt;Support platforms&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows (x86, x64, amd64, x86_amd64)&lt;/li&gt;
  &lt;li&gt;Macosx (i386, x86_64)&lt;/li&gt;
  &lt;li&gt;Linux (i386, x86_64, cross-toolchains …)&lt;/li&gt;
  &lt;li&gt;Android (armv5te, armv6, armv7-a, armv8-a, arm64-v8a)&lt;/li&gt;
  &lt;li&gt;iPhoneOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt;
  &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt;
  &lt;li&gt;Mingw (i386, x86_64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;support-languages&quot;&gt;Support Languages&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Objc/Objc++&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Assembly&lt;/li&gt;
  &lt;li&gt;Golang&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Dlang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;builtin-plugins&quot;&gt;Builtin Plugins&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Macros script plugin&lt;/li&gt;
  &lt;li&gt;Run the custom lua script plugin&lt;/li&gt;
  &lt;li&gt;Generate IDE project file plugin（makefile, vs2002 - vs2017 .. ）&lt;/li&gt;
  &lt;li&gt;Generate doxygen document plugin&lt;/li&gt;
  &lt;li&gt;Convert .app to .ipa plugin&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 23 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/03/23/update-v2.1.2/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/03/23/update-v2.1.2/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>version</category>
        
        <category>golang</category>
        
        <category>rust</category>
        
        <category>dlang</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake v2.1.2版本更新，增强vs工程支持</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;概述&lt;/h2&gt;

&lt;p&gt;此版本主要增强了vs201x工程的生成，以及支持vs2017编译环境，并且针对archlinux提供更加方便的aur安装。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/cn/&quot;&gt;项目主页&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/#zh/&quot;&gt;查看文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详细更新内容如下：&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;新特性&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;添加aur打包脚本，并支持用&lt;code class=&quot;highlighter-rouge&quot;&gt;yaourt&lt;/code&gt;包管理器进行安装。&lt;/li&gt;
  &lt;li&gt;添加&lt;a href=&quot;#http://xmake.io/#/zh/manual?id=targetset_basename&quot;&gt;set_basename&lt;/a&gt;接口，便于定制化修改生成后的目标文件名&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;改进&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;支持vs2017编译环境&lt;/li&gt;
  &lt;li&gt;支持编译android版本的rust程序&lt;/li&gt;
  &lt;li&gt;增强vs201x工程生成插件，支持同时多模式、架构编译&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs&quot;&gt;Bugs修复&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;修复编译android程序，找不到系统头文件问题&lt;/li&gt;
  &lt;li&gt;修复检测选项行为不正确问题&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tboox/xmake/issues/57&quot;&gt;#57&lt;/a&gt;: 修复代码文件权限到0644&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-3&quot;&gt;构建演示&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tboox/xmake&quot;&gt;&lt;img src=&quot;/static/img/xmake/build_demo.gif&quot; alt=&quot;build_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;XMake是一个基于Lua的轻量级跨平台自动构建工具，支持在各种主流平台上构建项目&lt;/p&gt;

&lt;p&gt;xmake的目标是开发者更加关注于项目本身开发，简化项目的描述和构建，并且提供平台无关性，使得一次编写，随处构建&lt;/p&gt;

&lt;p&gt;它跟cmake、automake、premake有点类似，但是机制不同，它默认不会去生成IDE相关的工程文件，采用直接编译，并且更加的方便易用
采用lua的工程描述语法更简洁直观，支持在大部分常用平台上进行构建，以及交叉编译&lt;/p&gt;

&lt;p&gt;并且xmake提供了创建、配置、编译、打包、安装、卸载、运行等一些actions，使得开发和构建更加的方便和流程化。&lt;/p&gt;

&lt;p&gt;不仅如此，它还提供了许多更加高级的特性，例如插件扩展、脚本宏记录、批量打包、自动文档生成等等。。&lt;/p&gt;

&lt;p&gt;如果你想要了解更多，请参考：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/&quot;&gt;在线文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake&quot;&gt;在线源码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xmake.io/cn&quot;&gt;项目主页&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-5&quot;&gt;简单的工程描述&lt;/h2&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;binary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/*.c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-6&quot;&gt;构建工程&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-7&quot;&gt;运行目标&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-8&quot;&gt;调试程序&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;xmake run -d console
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-9&quot;&gt;支持特性&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Tasks&lt;/li&gt;
  &lt;li&gt;Macros&lt;/li&gt;
  &lt;li&gt;Actions&lt;/li&gt;
  &lt;li&gt;Options&lt;/li&gt;
  &lt;li&gt;Plugins&lt;/li&gt;
  &lt;li&gt;Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-10&quot;&gt;支持平台&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows (x86, x64, amd64, x86_amd64)&lt;/li&gt;
  &lt;li&gt;Macosx (i386, x86_64)&lt;/li&gt;
  &lt;li&gt;Linux (i386, x86_64, cross-toolchains …)&lt;/li&gt;
  &lt;li&gt;Android (armv5te, armv6, armv7-a, armv8-a, arm64-v8a)&lt;/li&gt;
  &lt;li&gt;iPhoneOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt;
  &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt;
  &lt;li&gt;Mingw (i386, x86_64)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-11&quot;&gt;支持语言&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Objc/Objc++&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Assembly&lt;/li&gt;
  &lt;li&gt;Golang&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Dlang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-12&quot;&gt;内置插件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;宏记录脚本和回放插件&lt;/li&gt;
  &lt;li&gt;加载自定义lua脚本插件&lt;/li&gt;
  &lt;li&gt;生成IDE工程文件插件（makefile, vs2002 - vs2017, …）&lt;/li&gt;
  &lt;li&gt;生成doxygen文档插件&lt;/li&gt;
  &lt;li&gt;iOS app2ipa插件&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 23 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/03/23/update-v2.1.2/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/03/23/update-v2.1.2/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>版本</category>
        
        <category>vs201x</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake v2.1.1 released, support golang, dlang and rust languages</title>
        <description>&lt;h3 id=&quot;new-features&quot;&gt;New features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;--links&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;--linkdirs&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--includedirs&lt;/code&gt; configure arguments&lt;/li&gt;
  &lt;li&gt;Add app2ipa plugin&lt;/li&gt;
  &lt;li&gt;Add dictionary syntax style for &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Provide smart scanning and building mode without &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;set_xmakever&lt;/code&gt; api for &lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;add_frameworks&lt;/code&gt; api for &lt;code class=&quot;highlighter-rouge&quot;&gt;objc&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;swift&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Support multi-languages extension and add &lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt; language&lt;/li&gt;
  &lt;li&gt;Add optional &lt;code class=&quot;highlighter-rouge&quot;&gt;target_end&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;option_end&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;task_end&lt;/code&gt; apis for scope&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt; project templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Support vs2017 for the project plugin&lt;/li&gt;
  &lt;li&gt;Improve gcc error and warning tips&lt;/li&gt;
  &lt;li&gt;Improve lanuage module&lt;/li&gt;
  &lt;li&gt;Improve print interface, support lua print and format output&lt;/li&gt;
  &lt;li&gt;Automatically scan project files and generate it for building if xmake.lua not exists&lt;/li&gt;
  &lt;li&gt;Modify license to Apache License 2.0&lt;/li&gt;
  &lt;li&gt;Remove some binary tools&lt;/li&gt;
  &lt;li&gt;Remove install.bat script and provide nsis install package&lt;/li&gt;
  &lt;li&gt;Rewrite &lt;a href=&quot;http://www.xmake.io/#/home/&quot;&gt;documents&lt;/a&gt; using &lt;a href=&quot;https://github.com/egoist/docute&quot;&gt;docute&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Improve &lt;code class=&quot;highlighter-rouge&quot;&gt;os.run&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.exec&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.cp&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.mv&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;os.rm&lt;/code&gt; interfaces and support wildcard pattern&lt;/li&gt;
  &lt;li&gt;Optimize the output info and add &lt;code class=&quot;highlighter-rouge&quot;&gt;-q|--quiet&lt;/code&gt; option&lt;/li&gt;
  &lt;li&gt;Improve makefile generator, uses $(XX) variables for tools and flags&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs-fixed&quot;&gt;Bugs fixed&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake/issues/41&quot;&gt;#41&lt;/a&gt;: Fix checker bug for windows&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake/issues/43&quot;&gt;#43&lt;/a&gt;: Avoid to generate unnecessary .xmake directory&lt;/li&gt;
  &lt;li&gt;Add c++ stl search directories for android&lt;/li&gt;
  &lt;li&gt;Fix compile error for rhel 5.10&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;os.iorun&lt;/code&gt; bug&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/03/04/update-v2.1.1/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/03/04/update-v2.1.1/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>version</category>
        
        <category>golang</category>
        
        <category>rust</category>
        
        <category>dlang</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake 大版本发布：v2.1.1，新增golang, rust, dlang构建支持</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;概述&lt;/h2&gt;

&lt;p&gt;此版本重构了整个xmake，使得xmake更加方便地进行多语言扩展，并且在之前原有的构建语言支持上，新增了对&lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt; 程序构建支持。&lt;/p&gt;

&lt;p&gt;并且重写了所有文档，提供更加详细完整的接口手册和文档支持：&lt;a href=&quot;http://www.xmake.io/#zh/&quot;&gt;新版文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;License也从之前的LGPLv2.1改为Apache License 2.0，更加详细的改进请看下面详细描述：&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;新特性&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;--links&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;--linkdirs&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--includedirs&lt;/code&gt; 配置参数&lt;/li&gt;
  &lt;li&gt;添加app2ipa插件&lt;/li&gt;
  &lt;li&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;工程描述增加dictionay语法风格&lt;/li&gt;
  &lt;li&gt;提供智能扫描编译模式，在无任何&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;等工程描述文件的情况下，也能直接快速编译&lt;/li&gt;
  &lt;li&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;xmake.lua&lt;/code&gt;工程描述添加&lt;code class=&quot;highlighter-rouge&quot;&gt;set_xmakever&lt;/code&gt;接口，更加友好的处理版本兼容性问题&lt;/li&gt;
  &lt;li&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;objc&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;swift&lt;/code&gt;程序添加&lt;code class=&quot;highlighter-rouge&quot;&gt;add_frameworks&lt;/code&gt;接口&lt;/li&gt;
  &lt;li&gt;更加快速方便的多语言扩展支持，增加&lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt;程序构建的支持&lt;/li&gt;
  &lt;li&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;target_end&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;option_end&lt;/code&gt; 和&lt;code class=&quot;highlighter-rouge&quot;&gt;task_end&lt;/code&gt;等可选api，用于显示结束描述域，进入根域设置，提高可读性&lt;/li&gt;
  &lt;li&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;golang&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;dlang&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;rust&lt;/code&gt;工程模板&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;改进&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;工程生成插件支持vs2017&lt;/li&gt;
  &lt;li&gt;改进gcc/clang编译器警告和错误提示&lt;/li&gt;
  &lt;li&gt;重构代码架构，改进多语言支持，更加方便灵活的扩展语言支持&lt;/li&gt;
  &lt;li&gt;改进print接口，同时支持原生lua print以及格式化打印&lt;/li&gt;
  &lt;li&gt;如果xmake.lua不存在，自动扫描工程代码文件，并且生成xmake.lua进行编译&lt;/li&gt;
  &lt;li&gt;修改license，使用更加宽松的Apache License 2.0&lt;/li&gt;
  &lt;li&gt;移除一些二进制工具文件&lt;/li&gt;
  &lt;li&gt;移除install.bat脚本，提供windows nsis安装包支持&lt;/li&gt;
  &lt;li&gt;使用&lt;a href=&quot;https://github.com/egoist/docute&quot;&gt;docute&lt;/a&gt;重写&lt;a href=&quot;http://www.xmake.io/#/zh/&quot;&gt;文档&lt;/a&gt;，提供更加完善的文档支持&lt;/li&gt;
  &lt;li&gt;增强&lt;code class=&quot;highlighter-rouge&quot;&gt;os.run&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.exec&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.cp&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;os.mv&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;os.rm&lt;/code&gt; 等接口，支持通配符模式匹配和批量文件操作&lt;/li&gt;
  &lt;li&gt;精简和优化构建输出信息，添加&lt;code class=&quot;highlighter-rouge&quot;&gt;-q|--quiet&lt;/code&gt;选项实现静默构建&lt;/li&gt;
  &lt;li&gt;改进&lt;code class=&quot;highlighter-rouge&quot;&gt;makefile&lt;/code&gt;生成插件，抽取编译工具和编译选项到全局变量&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bugs&quot;&gt;Bugs修复&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake/issues/41&quot;&gt;#41&lt;/a&gt;: 修复在windows下自动检测x64失败问题&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/waruqi/xmake/issues/43&quot;&gt;#43&lt;/a&gt;: 避免创建不必要的.xmake工程缓存目录&lt;/li&gt;
  &lt;li&gt;针对android版本添加c++ stl搜索目录，解决编译c++失败问题&lt;/li&gt;
  &lt;li&gt;修复在rhel 5.10上编译失败问题&lt;/li&gt;
  &lt;li&gt;修复&lt;code class=&quot;highlighter-rouge&quot;&gt;os.iorun&lt;/code&gt;返回数据不对问题&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/03/04/update-v2.1.1/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/03/04/update-v2.1.1/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>版本</category>
        
        <category>golang</category>
        
        <category>rust</category>
        
        <category>dlang</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>The new version document of xmake</title>
        <description>&lt;p&gt;Before the &lt;a href=&quot;#https://github.com/tboox/xmake/wiki&quot;&gt;wiki document&lt;/a&gt; structure is not very good, and not convenient to retrieve.&lt;/p&gt;

&lt;p&gt;So I recently rewritten the document of xmake using &lt;a href=&quot;https://docute.js.org/&quot;&gt;docute&lt;/a&gt; again.&lt;/p&gt;

&lt;p&gt;The Documents:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/home&quot;&gt;English Document&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/&quot;&gt;Chinese Document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 07 Feb 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/02/07/new-document/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/02/07/new-document/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>document</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake新版文档更新</title>
        <description>&lt;p&gt;之前的&lt;a href=&quot;#https://github.com/tboox/xmake/wiki&quot;&gt;wiki文档&lt;/a&gt;结构不是很好，而且不方便检索。&lt;/p&gt;

&lt;p&gt;因此最近使用&lt;a href=&quot;https://docute.js.org/&quot;&gt;docute&lt;/a&gt;这个文档工具，重写了一遍整个xmake文档，并且增加了更加详细的api文档手册，后续会持续更新维护。&lt;/p&gt;

&lt;p&gt;目前英文版本的手册还不是很完善，有兴趣的同学可以帮忙一起翻译下哦，现在的新版文档支持多人编辑提交到github来共同维护。&lt;/p&gt;

&lt;p&gt;文档地址：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/zh/&quot;&gt;xmake中文文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmake.io/#/home&quot;&gt;xmake英文文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 07 Feb 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/02/07/new-document/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/02/07/new-document/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>文档</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>An usage demo of xmake</title>
        <description>&lt;p&gt;&lt;a href=&quot;/project&quot;&gt;&lt;img src=&quot;/static/img/xmake/usage_demo.gif&quot; alt=&quot;usage_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/01/18/usage-demo/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/01/18/usage-demo/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>usage</category>
        
        <category>demo</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>xmake使用演示</title>
        <description>&lt;p&gt;&lt;a href=&quot;/cn/project&quot;&gt;&lt;img src=&quot;/static/img/xmake/usage_demo.gif&quot; alt=&quot;usage_demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/01/18/usage-demo/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/01/18/usage-demo/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>使用演示</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>利用debug库实现对lua的性能分析</title>
        <description>&lt;p&gt;之前在给&lt;a href=&quot;/cn/project&quot;&gt;xmake&lt;/a&gt;做构建的效率优化的时候，需要对lua脚本的api调用性能进行分析，分析出最耗时一些lua调用api，
找出性能瓶颈，来针对性地进行优化，那么问题来了，如果对lua脚本像c程序那样进行profile呢？&lt;/p&gt;

&lt;p&gt;我们现在看下最后实现完的最终效果：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 4.681,  98.84%,       1, anonymous                     : actions/build/main.lua: 36
 3.314,  69.98%,       1, anonymous                     : actions/build/main.lua: 66
 3.314,  69.98%,       1, build                         : actions/build/builder.lua: 127
 3.298,  69.65%,       2, _build_target                 : actions/build/builder.lua: 41
 3.298,  69.65%,       2, script                        : actions/build/builder.lua: 30
 2.590,  54.70%,       2, buildall                      : actions/build/kinds/object.lua: 174
 2.239,  47.27%,     468, resume                        : core/sandbox/modules/coroutine.lua: 40
 2.226,  47.00%,     468, anonymous                     : actions/build/kinds/object.lua: 242
 2.073,  43.77%,       3, _build_target_and_deps        : actions/build/builder.lua: 64
 2.047,  43.22%,     468, _build                        : actions/build/kinds/object.lua: 79
 2.034,  42.96%,       1, build                         : actions/build/kinds/static.lua: 31
 1.190,  25.13%,       1, build                         : actions/build/kinds/binary.lua: 31
 0.806,  17.03%,       8, load                          : core/base/interpreter.lua: 527
 0.766,  16.18%,       2, run                           : core/project/task.lua: 393
 0.711,  15.01%,       1, anonymous                     : actions/config/main.lua: 132
 0.615,  12.99%,    2117, vformat                       : core/sandbox/modules/string.lua: 40
 0.593,  12.53%,      16, defaults                      : core/base/option.lua: 803
 0.593,  12.52%,       1, save                          : core/base/option.lua: 131
 0.475,  10.03%,       2, anonymous                     : /Users/ruki/projects/personal/tbox/xmake.lua: 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中第一列为当前调用的耗时（单位：cpu时钟数），第二列为耗时占比，第三列为调用次数，然后是函数名和源代码位置。&lt;/p&gt;

&lt;h4 id=&quot;debugsethook&quot;&gt;debug.sethook简介&lt;/h4&gt;

&lt;p&gt;其实lua自带的debug就可以做到：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;debug库提供了一种hook的方式，可以通过注册一个handler函数，在lua脚本运行到某个调用时，会触发这个handler，
获取到相应的执行信息，并且给你一个记录和数据维护的机会。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;它主要有四种事件会触发这个handler的调用：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;当调用一个lua函数的时候，会触发call事件&lt;/li&gt;
  &lt;li&gt;当函数返回的时候，会触发一个return事件&lt;/li&gt;
  &lt;li&gt;当执行下一行代码的时候，会触发一个line事件&lt;/li&gt;
  &lt;li&gt;当运行指定数目的指令后，会触发count事件&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我们可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;debug.sethook&lt;/code&gt;这个函数来注册一个hook的handler，他有三个参数：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;handler的处理函数，hook事件触发后被调用&lt;/li&gt;
  &lt;li&gt;描述需要hook的事件类型，call、return和line事件分别对应：’c’, ‘r’, ‘l’，可以互相组合成一个字符串&lt;/li&gt;
  &lt;li&gt;获取count事件的频率（可选）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果需要&lt;/p&gt;

&lt;p&gt;要想关掉hooks，只需要不带参数地调用sethook即可。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;p&gt;最简单的trace，仅仅打印每条执行语句的行号：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;debug.sethook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;l&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;显示结果如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;line	136
line	113
line	76
line	77
line	113
line	118
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我们也可以自定义一个handler，传入第一个参数，通过debug库的getinfo获取正在执行的代码文件路径：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;debug.sethook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;debug.getinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;short_src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;l&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;显示结果如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/share/xmake/core/base/path.lua:46
/usr/local/share/xmake/core/base/path.lua:47
/usr/local/share/xmake/core/base/path.lua:56
/usr/local/share/xmake/core/base/string.lua:32
/usr/local/share/xmake/core/base/string.lua:33
/usr/local/share/xmake/core/base/string.lua:34
/usr/local/share/xmake/core/base/string.lua:35
/usr/local/share/xmake/core/base/string.lua:36
/usr/local/share/xmake/core/base/string.lua:38
/usr/local/share/xmake/core/base/string.lua:33
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果需要禁用之前的hook，只需要调用：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;debug.sethook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;profiler&quot;&gt;profiler性能分析器的实现&lt;/h4&gt;

&lt;p&gt;实现一个profiler类，通过下面的方式进行记录：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;-- 开始记录&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- TODO&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- ...&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 结束记录&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;相关实现代码如下：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- start profiling&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 初始化报告&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_REPORTS&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_REPORTS_BY_TITLE&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 记录开始时间&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_STARTIME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;os.clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 开始hook，注册handler，记录call和return事件&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;debug.sethook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_profiling_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;cr&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- stop profiling&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 记录结束时间&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_STOPTIME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;os.clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 停止hook&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;debug.sethook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 记录总耗时&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_STOPTIME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_STARTIME&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 排序报告&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;table.sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_REPORTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 格式化报告输出&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ipairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_REPORTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;-- calculate percent&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;percent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;percent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;-- trace&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%6.3f, %6.2f%%, %7d, %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;percent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callcount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;实现很简单，主要就是记录开始和结束时间，然后排序下最终的报表，进行格式化打印输出。&lt;/p&gt;

&lt;p&gt;其中，计时函数使用了&lt;code class=&quot;highlighter-rouge&quot;&gt;os.clock&lt;/code&gt;接口，返回一个程序使用CPU时间的一个近似值，不是毫秒哦，我们这边仅仅是为了分析性能瓶颈。&lt;/p&gt;

&lt;p&gt;就算不获取精确毫秒数，也是可以的（其实用毫秒也没什么意义，这种debug.sethook的方式原本就不是很精确），只要通过耗时占比就可以分析。&lt;/p&gt;

&lt;p&gt;接下来，就是handler函数中，对call和return事件，进行分别处理，累计每个函数的调用总时间，调用总次数。&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- profiling call&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_profiling_call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 获取当前函数对应的报告，如果不存在则初始化下&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_func_report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 记录这个函数的起始调用事件&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calltime&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;os.clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 累加这个函数的调用次数&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callcount&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callcount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- profiling return&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_profiling_return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 记录这个函数的返回时间&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stoptime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;os.clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 获取当前函数的报告&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_func_report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 计算和累加当前函数的调用总时间&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calltime&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calltime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stoptime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calltime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calltime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- the profiling handler&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;_profiling_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hooktype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 获取当前函数信息&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;debug.getinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;nS&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- 根据事件类型，分别处理 &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hooktype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;call&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_profiling_call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hooktype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;return&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_profiling_return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;简单吧，最后就是通过函数，获取指定的报告了，这个就不多说了，简单贴下代码吧：&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;-- get the function title&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_func_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- check&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- the function name&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;anonymous&#39;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- the function line&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;string.format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linedefined&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- the function source&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;short_src&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;C_FUNC&#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_PROGRAM_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- make title&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;string.format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%-30s: %s: %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- get the function report&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_func_report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- get the function title&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_func_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- get the function report&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_REPORTS_BY_TITLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;-- init report&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_func_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;funcinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;callcount&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;totaltime&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;-- save it&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_REPORTS_BY_TITLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;table.insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_REPORTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- ok?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;report&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;需要注意的是，通过debug.sethook的方式，进行hook计时本身也是有性能损耗的，因此不可能完全精确，如果改用c实现也许会好些。&lt;/p&gt;

&lt;p&gt;不过，对于平常的性能瓶颈分析，应该够用了。。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;结语&lt;/h4&gt;

&lt;p&gt;这里只是一个简单的例子，稍微扩展下，还是可以实现lua脚本的api实时调用追踪（也就是trace）。&lt;/p&gt;

&lt;p&gt;完整代码，可以到xmake的源码中翻看：&lt;a href=&quot;https://github.com/tboox/xmake/blob/master/xmake/core/base/profiler.lua&quot;&gt;profiler代码&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;里面除了性能分析，trace调用也有实现。&lt;/p&gt;

&lt;p&gt;最后，如果大家想快速体验下这个profiler的效果，可以直接运行xmake：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xmake --profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个&lt;code class=&quot;highlighter-rouge&quot;&gt;--profile&lt;/code&gt;是给xmake调试分析的时候使用，一般也就我自己用用，发现某些xmake操作很慢，想要查找问题原因的时候，不需要改代码，只需要快速的加上这个参数，重跑下就行了。。&lt;/p&gt;

&lt;p&gt;顺带的提下，xmake另外两个调试相关的参数：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-v/--verbose&lt;/code&gt;：显示详细输出信息，编译时还会显示详细警告信息。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--backtrace&lt;/code&gt;：出错的时候，显示详细栈信息，用于快速issues反馈，辅助定位问题。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;lua的debug库还是非常强大的，有兴趣的同学可以进一步去挖掘debug的各种特性哦。&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/cn/2017/01/12/lua-profiler/</link>
        <guid isPermaLink="true">http://www.tboox.org/cn/2017/01/12/lua-profiler/</guid>
        
        <category>xmake</category>
        
        <category>lua</category>
        
        <category>性能分析</category>
        
        
        <category>xmake</category>
        
      </item>
    
      <item>
        <title>Change License to Apache License 2.0</title>
        <description>&lt;p&gt;In order to better promote TBOOX open source project development, we decided to adopt a more relaxed, more developer-friendly Apache License 2.0&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/tboox/tbox&quot;&gt;tbox&lt;/a&gt; and &lt;a href=&quot;http://www.xmake.io/cn&quot;&gt;xmake&lt;/a&gt; projects have updated to new license.&lt;/p&gt;

&lt;p&gt;If you want to known more, please refer to：&lt;a href=&quot;https://github.com/tboox/tbox/blob/master/LICENSE.md&quot;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://www.tboox.org/2017/01/08/license-changed/</link>
        <guid isPermaLink="true">http://www.tboox.org/2017/01/08/license-changed/</guid>
        
        <category>tboox</category>
        
        <category>apache</category>
        
        <category>license</category>
        
        
        <category>tboox</category>
        
      </item>
    
  </channel>
</rss>
